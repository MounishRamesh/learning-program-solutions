



// Step 1: Product Interface
interface Notification {
    void notifyUser();
}

// Step 2: Concrete Products
class EmailNotification implements Notification {
    @Override
    public void notifyUser() {
        System.out.println("Notification: Email sent to user.");
    }
}

class SMSNotification implements Notification {
    @Override
    public void notifyUser() {
        System.out.println("Notification: SMS sent to user.");
    }
}

class PushNotification implements Notification {
    @Override
    public void notifyUser() {
        System.out.println("Notification: Push message sent to user.");
    }
}

// Step 3: Factory Class
class NotificationFactory {
    public static Notification createNotification(String type) {
        if (type == null || type.isEmpty()) return null;

        switch (type.toLowerCase()) {
            case "email":
                return new EmailNotification();
            case "sms":
                return new SMSNotification();
            case "push":
                return new PushNotification();
            default:
                throw new IllegalArgumentException("Unknown notification type: " + type);
        }
    }
}

// Step 4: Client Code
public class FactoryPatternDemo {
    public static void main(String[] args) {
        // You can change the type to "sms", "email", or "push"
        Notification notification = NotificationFactory.createNotification("push");
        notification.notifyUser();
    }
}

